<p>Note that information available here is accurate for the latest version  of SoupScript only.</p>
<h4><a name="[module]">[MODULE name]</a></h4>
<p>is case-sensitive, and marks the start of a module.</p>
<p>Module codes will not run one after another.</p>
<p>[MODULE main] always runs first. If undeclared, the program runs like  a script.</p>
<p><a href="soupscript-smp.php#Multiple_code_hives">Example</a></p>
<p>You run module code with <a href="#Get">Get</a> and <a href="#Do">Do</a>.</p>
<h4><a name="accountadd">AccountAdd</a>(UserName)</h4>
<p>adds an account named UserName in the local system.</p>
<h4><a name="accountenable">AccountEnable</a>(UserName,Enable)</h4>
<p>changes whether the User account is accessible and can be logged on.</p>
<h4><a name="accountremove">AccountRemove</a>(UserName)</h4>
<p>deletes an account.</p>
<h4><a name="accountsetpassword">AccountSetPassword</a>(UserName,Password)</h4>
<p>changes the password of a specified user account.</p>
<h4><a name="appactivate">AppActivate</a>(WindowText)</h4>
<p>activates any window with the window text specified.</p>
<h4><a name="asc">Asc</a>(Char)</h4>
<p>returns the ASCII value of a character. If you accidentally submit more  than one character, the first one will be used.</p>
<h4><a name="beep">Beep</a>(Freq,Duration)</h4>
<p>plays a speaker noise with the frequency and duration you specify.</p>
<p><a href="soupscript-smp.php#Strings_Example">Example (Morse Code)</a></p>
<h4><a name="bool">Bool</a>(Name, Value)</h4>
<p>creates a boolean (TRUE/FALSE) variable with the name and value you specify.</p>
<h4><a name="break">Break</a>(Optional Pointer)</h4>
<p>pauses the code until the user presses a key.</p>
<p>If Pointer is specified, the code will exit that sub, and will run the  line after the sub.</p>
<pre>sub main
    println hi
    break main
    println hi2
end main
println hi3
break

<span>returns hi and hi3</span></pre>
<h4><a name="breakex">BreakEx</a>(Optional Msg)</h4>
<p>is like <a href="#break">Break</a>, but allows you to change the "Press  any key to continue" text.</p>
<h4><a name="buffer">Buffer</a>(Length,Optional Transform)</h4>
<p>makes an empty string of spaces of your specified length.</p>
<pre>Buffer(5) "<span>     </span>"
Buffer(5,0) "<span>00000</span>"</pre>
<h4><a name="call">Call</a>(Pointer)</h4>
<p>runs the fucntion named as the parameter.</p>
<h4><a name="charin">CharIn</a>(<a name="charin0">Optional OnlyAllowLetter</a>)</h4>
<p>is like <a href="#break">Break</a>, but also returns the key which the  user pressed.</p>
<p>If OnlyAllowLetter is specified, the program will not continue unless  that specific key is pressed. (case sensitive)</p>
<h4><a name="chr">Chr</a>(Num)</h4>
<p>returns the character from the given ASCII value.</p>
<h4><a name="cin">CIn</a>()</h4>
<p>is like <a href="#break">Break</a>, but also returns the line which the  user entered. The code continues when the enter key is pressed.</p>
<h4><a name="cint">CInt</a>, <a name="clng">CLng</a>, <a name="cstr">CStr</a>, <a name="cdate">CDate</a>, <a name="cbool">CBool</a> and <a name="cdbl"> CDbl</a>(Value)</h4>
<p>conversion functions. Returns value converted to that format.</p>
<h4><a name="copy">Copy</a>(File1,File2)</h4>
<p>copies file1 to file2.</p>
<h4><a name="cout">COut</a>(Message,Optional DebugLevel)</h4>
<p>prints a line of text you specified on the console. Use debugLevel (default  is 2) to change your message priority.</p>
<p>This function is obsolete. See <a href="#println">printLn</a>.</p>
<h4><a name="createdirectory">CreateDirectory</a>(Path,Optional Length,Optional  SecurityDesc,Optional IneritHandle)</h4>
<p>makes a new folder.</p>
<h4><a name="createprocess">CreateProcess</a>(Obj)</h4>
<p>runs a program which is not ".exe" as a program if it is one.</p>
<h4><a name="cursorx">CursorX</a> and <a name="cursory">CursorY</a></h4>
<p>returns the position of the cursor in X or Y axis.</p>
<h4><a name="date">Date</a>(Name,Value)</h4>
<p>creates a date variable with the name and value you specify.</p>
<h4><a name="del">Del</a>(FileFileName)</h4>
<p>deletes a file.</p>
<h4><a name="deletesetting">DeleteSetting</a>(Key,Optional Section,Optional  AppName)</h4>
<p>deletes a key or a settings branch. If AppName is not specified then  "SoupScript&amp;quot; will be used instead.</p>
<h4><a name="do">Do</a>(Expression)</h4>
<p>runs the expression as code. For example</p>
<pre>do(msgbox(hello!))</pre>
<p>is equivalent to</p>
<pre>msgbox(hello!)</pre>
<h4><a name="double">Double</a>(Name,Value)</h4>
<p>creates a decimal variable with the name and value you specify.</p>
<p>This is also the biggest decimal variable type you can have in SoupScript.</p>
<h4><a name="download">Download</a>(URL,Optional SaveTo)</h4>
<p>downloads some file from the internet to a local destination, then returns  the URL of the destination.</p>
<p>If a destination is not specified, the file will be saved in a temp folder  instead.</p>
<h4><a name="driveexists">DriveExists</a>(DriveLetter)</h4>
<p>returns true if a local drive of the specified drive letter exists.</p>
<h4><a name="end">End</a>(Optional PointerName, Optional FunctionReturn)</h4>
<p>quits the program if no parameter is specified. If you specify a pointer  name, then this command indicates the return point of the function.</p>
<pre>End</pre>
<p>Closes the program.</p>
<pre>End Addition</pre>
<p>Ends a custom function called Addition.</p>
<pre>End Addtion, 123</pre>
<p>Ends a custom function called Addition, and assigns a new variable called  Addition with the value being 123 (no <a href="#recast">cast</a>).</p>
<h4><a name="fileappend">FileAppend</a>(FileName,FileNum)</h4>
<p>opens a file as a number specified ready for insertion of data at the  end of the file.</p>
<h4><a name="fileclose">FileClose</a>(FileNum)</h4>
<p>closes a file with the file number you specify.</p>
<h4><a name="fileinput">FileInput</a>(FileName,FileNum)</h4>
<p>opens a file as a number specified ready for text reading.</p>
<h4><a name="filelockread">FileLockRead</a>(FileName,FileNum)</h4>
<p>locks a file and prevents other programs from reading the program at  the same time.</p>
<h4><a name="fileoutput">FileOutput</a>(FileFileName,FileNum)</h4>
<p>is like <a href="#fileappend">FileAppend</a>, but overwrites existing  data.</p>
<h4><a name="fileput">FilePut</a>(Text,FileNum)</h4>
<p>is like <a href="#fileoutput">FileOutput</a>, but is binary.</p>
<h4><a name="filetext">FileText</a>(FileNum)</h4>
<p>returns the text content in a file.</p>
<h4><a name="get">Get</a>(Args)</h4>
<p>returns a value based on arguments. Available arguments include:</p>
<table class="stripeme" style="width: 100%; font-size: xx-small;">
<tbody>
<tr>
<th>Path</th> <th>subpath</th> <th>subpath</th> <th>Returns</th> <th>Notes</th>
</tr>
<tr>
<td>app, program, my, me <em>or</em> myself</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>the hwnd of the program window</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>console</td>
<td>&nbsp;</td>
<td>the hwnd of the console</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>desktop</td>
<td>&nbsp;</td>
<td>the hwnd of the desktop</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>foreground <em>or</em> topmost</td>
<td>&nbsp;</td>
<td>the hwnd of the foreground window</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>name <em>or</em> productname</td>
<td>&nbsp;</td>
<td>the product name, most likely "SoupScript" or "SoupBase"</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>username</td>
<td>&nbsp;</td>
<td>the current user name</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>ver, version <em>or</em> myver</td>
<td>&nbsp;</td>
<td>textual version, like "V.3.0 beta"</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>a, 2, all, number <em>or</em> int</td>
<td>numerical version, like "370"</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>major</td>
<td>part of the version number</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>minor</td>
<td>part of the version number</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>revision</td>
<td>part of the version number</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>window, me, my <em>or </em>myself</td>
<td>&nbsp;</td>
<td>the hwnd of the program window</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>backcolor</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>the background colour of the control indicated a hwnd previously  supplied</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>clipboard</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>the text in the clipboard</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>console</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>the hwnd of the console</td>
<td>same as my/console</td>
</tr>
<tr>
<td>cursor</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>x</td>
<td>&nbsp;</td>
<td>x position of the cursor</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>y</td>
<td>&nbsp;</td>
<td>y position of the cursor</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>font</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>font name of the control indicated a hwnd previously supplied</td>
<td>same as font/name</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>bold</td>
<td>&nbsp;</td>
<td>whether the control indicated a hwnd previously supplied has  bold font</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>color</td>
<td>&nbsp;</td>
<td>the color of the font indicated a hwnd previously supplied</td>
<td>in long integer</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>italic</td>
<td>&nbsp;</td>
<td>whether the control indicated a hwnd previously supplied has  italic font</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>size</td>
<td>&nbsp;</td>
<td>font size of the control indicated a hwnd previously supplied</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>strikethrough</td>
<td>&nbsp;</td>
<td>whether the control indicated a hwnd previously supplied has  strikethrough property</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>underline</td>
<td>&nbsp;</td>
<td>whether the control indicated a hwnd previously supplied is  underlined</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>freefile <em>or</em> filehandle</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>a number available for file reading</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>height</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>height of the control indicated a hwnd previously supplied</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>hive</td>
<td>(number)</td>
<td>&nbsp;</td>
<td>the code hive numbered (number)</td>
<td>low level feature. Do not use.</td>
</tr>
<tr>
<td>hwnd <em>or</em> window</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>the hwnd previously supplied</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>(number)</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>supplies a hwnd instead of having an ouput</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>console</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>supplies a hwnd instead of having an ouput</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>desktop</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>supplies a hwnd instead of having an ouput</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>foreground <em>or</em> topmost</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>supplies a hwnd instead of having an ouput</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>opacity <em>or</em> istransparent</td>
<td>&nbsp;</td>
<td>percentage opacity of the window previously supplied</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>window, me, my <em>or</em> myself</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>supplies the program hwnd instead of having an ouput.</td>
</tr>
<tr>
<td>keystate <em>or </em>&nbsp;asynckeystate</td>
<td>(number)</td>
<td>&nbsp;</td>
<td>boolean value of whether that virtual key is pressed</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>left <em>or</em> x</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>x-position of the hwnd of a window previously supplied</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>module</td>
<td>(name)</td>
<td>&nbsp;</td>
<td>the contents of a module</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>setting <em>or</em> settings</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>(node name)</td>
<td>&nbsp;</td>
<td>value from the node (node name) from the settings file</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>(node name)</td>
<td>(default)</td>
<td>value from the node (node name) from the settings file, and  if the node does not exist, returns (default)</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>(tree name)/(node name)</td>
<td>(default)</td>
<td>value from the node (node name) from a custom tree called (tree  name) in the settings file, and if the node does not exist, returns  (default)</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>size <em>or </em>filesize</td>
<td>(file name)</td>
<td>&nbsp;</td>
<td>size of the file specified</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>tickcount <em>or</em> gettickcount</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>the number of milliseconds since startup</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>top <em>or</em> y</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>y-position of the hwnd of a window previously supplied</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>trace</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>the current verbose level of the console</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>val</td>
<td>(value)</td>
<td>&nbsp;</td>
<td>numerical value of the (value) supplied</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>width</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>width of a window of the hwnd previously supplied</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>windowtext,&nbsp; getwindowtext <em>or</em> text</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>caption of a window of the hwnd previously supplied</td>
<td>if no hwnd is specified, hwnd is assumed to be that of the program  window</td>
</tr>
</tbody>
</table>
<p>Example usages</p>
<pre>Get app/version
WW=Get hwnd/8903895 text
x=Get cursor/x
y=Get cursor/y</pre>
<h4><a name="getsetting">GetSetting</a>(Key,Optional Default,Optional Section,Optional  AppName)</h4>
<p>This function is obsolete.</p>
<p>returns the value of a key specified. If AppName is not specified then  "SoupScript&amp;quot; will be used instead.</p>
<h4><a name="getshortpathname">GetShortPathName</a>(FileName)</h4>
<p>returns a DOS 8.3 file name from a normal one.</p>
<pre>GetShortPathName(C:\Program Files\VeryLong[...]\SuperLong[...]\W[...].exe)
<span>returns C:\PROGRA~1\VERYLO~1\SUPERL~1\WHATEV~3.EXE</span></pre>
<h4><a name="goto">Goto</a>(PointerName)</h4>
<p>goes to where a pointer is marked.</p>
<p>This is an example loop:</p>
<pre>Mark Hello
    msgbox Hi!
Goto Hello</pre>
<h4><a name="gotoline">GotoLine</a>(LineNumber)</h4>
<p>Goes to the line which the line number matches.<br /> <strong>The line number counter is an inaccurrate guideline</strong>.</p>
<h4><a name="iif">IIf</a>(Expression,True,False)</h4>
<p>returns the true value if the expression is true, the false value otherwise.</p>
<h4><a name="include">Include</a>(FileName)</h4>
<p>is an obsolete function that may not function. See <a href="#runscript">RunScript</a> for the function.</p>
<h4><a name="inputbox">InputBox</a>(Text,Title,Default)</h4>
<p>returns whatever the user types into the box containing a text box. If  the user presses cancel, the return will be nothing.</p>
<h4><a name="int">Int</a>(Name,Value)</h4>
<p>creates a numberical variable with the name and value you specify. Int  can only store small numbers.</p>
<h4><a name="join">Join</a>(Text1,Text2)</h4>
<p>returns the combination of the two values.</p>
<pre>Join(He,llo) <span>Hello</span></pre>
<h4><a name="keypress">KeyPress</a>(Char)</h4>
<p>performs a keyboard key press on the key you specify.</p>
<h4><a name="killprocess">KillProcess</a>(ImageName)</h4>
<p>stops a program from running provided that you know it's name, e.g. "mspaint.exe"</p>
<pre>KillProcess MSPaint.exe <span>closes a paint window</span></pre>
<h4><a name="left">Left</a>(Text,NumChars)</h4>
<p>returns the first number of characters of the string.</p>
<h4><a name="len">Len</a>(Text)</h4>
<p>returns the length of the expression.</p>
<p>This returns 5:</p>
<pre>k=Len(Hello)</pre>
<h4><a name="logic">Logic</a>(Expression,Logic,Expression2)</h4>
<p>returns the cumulative logic of two operations. Logics include:</p>
<ul>
<li>
<pre>=  &gt;  &lt;  &gt;=  &lt;=  &lt;&gt;</pre>
returns boolean of whether two expressions meet the requirements</li>
<li>
<pre>and  or  xor</pre>
special operators </li>
</ul>
<p>Example usages</p>
<pre>Logic(1,=,0) <span>returns False
</span>Logic(1,&gt;=,0) <span>returns True</span></pre>
<p><a href="soupscript-smp.php#Strings_Example">Example (Morse Code)</a></p>
<h4><a name="long">Long</a>(Name,Value)</h4>
<p>is like <a href="#int">Int</a>, but also storing bigger numbers.</p>
<h4><a name="loop">Loop</a>(Pointer)</h4>
<p>If the pointer return value is not 1, then it will go back to where the  pointer is. If the value IS 1, then the program will continue.</p>
<h4><a name="mark">Mark</a>(Pointer)</h4>
<p>associates a line number with a variable named as your expression.</p>
<p>See <a href="#goto">GoTo</a> for examples</p>
<h4><span><a name="math">Math</a>(Expression,Logic,Optional Expression2)</span></h4>
<p>returns value of mathematical operations. Example logics include:</p>
<ul>
<li>
<pre>+   -   *   /</pre>
&nbsp;represent add, subtract, multiply and divide respectively </li>
<li>
<pre>%</pre>
&nbsp;returns the remainder when you divide the first number by the second </li>
<li>
<pre>abs </pre>
returns modulus of the first number </li>
<li>
<pre>int </pre>
is like / but returns an integral value </li>
<li>
<pre>log </pre>
returns the log value of the first number </li>
<li>
<pre>rnd </pre>
returns a random number less than 1 </li>
<li>
<pre>round </pre>
returns the first number rounded to the number of digits specified by  the second number </li>
<li>
<pre>sin   cos   tan </pre>
returns their respective values of the first number </li>
</ul>
<p>Example usages:</p>
<pre>Math(1,+,3) <span>4</span>
Math(9,%,2) <span>1</span>
Math(90,sin) <span>1</span>
Math(3.141592654,round,2) <span>3.14</span></pre>
<h4><a name="mid">Mid</a>(Text,StartFrom,Optional NumChars)</h4>
<p>Mid returns the length of string inside a string starting from a number  you specify.</p>
<pre>Mid(Hello,4,1) <span>l</span>
Mid(Hello,2) <span>ello</span></pre>
<h4><a name="mouseclick">MouseClick</a>(mouse,x,y)</h4>
<p>performs a mouse click at the coordinate you specify.</p>
<h4><a name="move">Move</a>(File1,File2)</h4>
<p>moves a file from one place to another.</p>
<h4><a name="msgbeep">MsgBeep</a>(StyleVal)</h4>
<p>plays a sound which is played when a message box is opened. You can use  the msgbox constants for the StyleVal parameter.</p>
<h4><a name="msgbox">MsgBox</a>(Text,Optional StyleVal,Optional Title)</h4>
<p>shows a message box. You can use the msgbox constants for the StyleVal  parameter.</p>
<h4><a name="netsend">NetSend</a>(Message,To,From)</h4>
<p>sends a message to a computer on your LAN. The messenger service must  be enabled on both computers.</p>
<h4><a name="netsendstatus">NetSendStatus</a>(Num)</h4>
<p>returns the textual status of the return of the <a href="#netsend">NetSend</a> command.</p>
<h4><a name="now">Now</a>()</h4>
<p>returns the current date and time if the variable type is date, and a  long number of the variable is long.</p>
<h4><a name="null">Null</a>(Var)</h4>
<p>resets the value of a variable.</p>
<h4><a name="opendlg">OpenDlg</a>(Filter,Title,InitDir)</h4>
<p>shows a dialog which returns the file name selected.</p>
<h4><a name="openurl">OpenURL</a>(url)</h4>
<p>opens the default browser going to the URL you specify.</p>
<h4><a name="pcase">PCase</a>(Text)</h4>
<p>Formats Your Text So That Every Word Is Capitalized Like This.</p>
<h4><a name="play">Play</a>(Music)</h4>
<p>plays a sequence of Beeps.</p>
<pre>Play CDEFGAB <span>plays an octet</span></pre>
<h4><a name="print">Print</a>(Message,Optional DebugLevel)</h4>
<p>adds a message on the console if the specified DebugLevel is higher than  that of the system one, which you can set using Set.</p>
<h4><a name="println">PrintLn</a>(Message,Optional DebugLevel)</h4>
<p>adds a message and starts a new line on the console if the specified  DebugLevel is higher than that of the system one, which you can set using  Set.</p>
<h4><a name="readini">ReadINI</a>(Section,Key,FileName,Optional Default)</h4>
<p>returns a key value from an INI file. You can specify the default value  if the key isn't found.</p>
<h4><a name="recast">Recast</a>(var,type)</h4>
<p>changes the variable type. You can use the vars constants to change the  type of a variable.</p>
<h4><a name="rem">REM</a>(comment)</h4>
<p>is a command for storing comments.</p>
<h4><a name="replace">Replace</a>(Source,Replace,With)</h4>
<p>returns a string which you replaced the second parameter with the third  parameter from the first parameter.</p>
<h4><a name="rgb">RGB</a>(Red,Green,Blue)</h4>
<p>returns a Long value of the colour based on the components of colour  you specify.</p>
<h4><a name="right">Right</a>(Text,NumChars)</h4>
<p>returns the last number of characters of the string.</p>
<h4><a name="rot13">ROT13</a>(Text)</h4>
<p>is an encryption algorithm which returns the encrypted/decrypted message  depending on the input.</p>
<h4><a name="runscript">RunScript</a>(FileName)</h4>
<p>allows usage of external code.</p>
<ul>
<li>
<pre>RunScript #STDIO</pre>
&nbsp;means to run "STDIO.script" from the program's folder. </li>
<li>
<pre>RunScript C:\i.script</pre>
&nbsp;means to run that. </li>
</ul>
<h4><a name="savedlg">SaveDlg</a>(Filter,Title)</h4>
<p>shows a dialog which returns the file name selected.</p>
<h4><a name="savesetting">SaveSetting</a>(Key,Optional Default,Optional  Section,Optional AppName)</h4>
<p>saves the value of a key specified. If AppName is not specified then  "SoupScript&amp;quot; will be used instead.</p>
<h4><a name="sendkeys">SendKeys</a>(Text)</h4>
<p>is like <a href="#keypress">KeyPress</a>, but also sends multiple keys. <a href="http://msdn2.microsoft.com/en-us/library/8c6yea83.aspx">Please  read more here on what you can do with SendKeys</a>.</p>
<h4><a name="set">Set</a>(Args)</h4>
<p>performs some actions as specified in the arguments. Available arguments  include:</p>
<ul>
<li>
<pre>backcolor</pre>
sets backcolor of console. You can use values from <a href="#uses">Uses</a>:colors  as well as long integer values.</li>
<li>
<pre>bold</pre>
sets bold boolean of console text </li>
<li>
<pre>border</pre>
sets the window's border style. There are two choices: 1 for normal  and 4 for toolbox (thinner borders).</li>
<li>
<pre>console</pre>
supplies console hwnd for all hwnd APIs </li>
<li>
<pre>font</pre>
sets font used for the console text </li>
<li>
<pre>forecolor</pre>
sets color used for the console text </li>
<li>
<pre>height</pre>
sets the height of the window </li>
<li>
<pre>hwnd</pre>
supplies a custom hwnd for all hwnd APIs </li>
<li>
<pre>left</pre>
sets the x coordinate of the window </li>
<li>
<pre>my</pre>
supplies console window hwnd for all hwnd APIs </li>
<li>
<pre>notheme</pre>
deactivates XP/Vista themes on the console window </li>
<li>
<pre>ontop</pre>
sets whether a window is always on top </li>
<li>
<pre>opacity</pre>
sets the transparency of the window specified, using percentage </li>
<li>
<pre>setting:settingname:value</pre>
saves a setting called <strong>settingname</strong> with the value <strong>value</strong>. You can get this value back using<br /> <strong><a href="#Get">Get</a></strong><strong> setting:settingname<br /> <br /> </strong>Available only from SoupScript 3.3 onwards.</li>
<li>
<pre>size</pre>
sets font size of the console </li>
<li>
<pre>text</pre>
returns the text of a window </li>
<li>
<pre>top</pre>
sets the y coordinate of the window </li>
<li>
<pre>totop</pre>
brings the window to top </li>
<li>
<pre>trace</pre>
adjusts how much information is printed on the console.<br /> 
<table style="width: 100%;">
<tbody>
<tr>
<td>Level</td>
<td>Action</td>
</tr>
<tr>
<td>-1</td>
<td>Absolutely everything</td>
</tr>
<tr>
<td>0</td>
<td>Everything, but console will be automatically cleared when  the text reaches 60k characters.</td>
</tr>
<tr>
<td>1</td>
<td>Warnings and errors</td>
</tr>
<tr>
<td>2</td>
<td>Errors only (default)</td>
</tr>
</tbody>
</table>
</li>
<li>
<pre>visible</pre>
sets visibility of the a window </li>
<li>
<pre>width</pre>
sets the width of the window </li>
</ul>
<p>Example usages</p>
<pre>Set My Text:Hello
Set My Text:Test Opacity:80 notheme backcolor:[white]
    forecolor:[black] font:Tahoma
Set setting:age:50</pre>
<h4><a name="setclipboard">SetClipboard</a>(Text)</h4>
<p>changes the clipboard content to some text you specify.</p>
<h4><a name="setcursorpos">SetCursorPos</a>(X,Y)</h4>
<p>moves the mouse to some coordinate you specify.</p>
<h4><a name="setwindowlong">SetWindowLong</a>(hWnd,nIndex,NewLong)</h4>
<p>changes the appearance of the window you specify. Please read <a href="http://msdn2.microsoft.com/en-us/library/ms633591(VS.85).aspx"> microsoft's help</a>.</p>
<h4><a name="shell">Shell</a>(Obj)</h4>
<p>is the input for the system run dialog.</p>
<pre>Shell calc <span>runs the calculator</span>
Shell cmd <span>runs the command prompt</span></pre>
<h4><a name="shellabout">ShellAbout</a>(AppName,Message)</h4>
<p>shows an about dialog containing details you specify. Default information  will be filled in for you otherwise.</p>
<h4><a name="shellexecute">ShellExecute</a>(EXEName)</h4>
<p>is like Shell. Please read <a href="http://msdn2.microsoft.com/en-us/library/bb762153(VS.85).aspx"> microsoft's help</a>. In SoupScript, this function is limited to executing  programs only.</p>
<h4><a name="shutdownex">ShutDownEx</a>(Server,WaitTime,Delay,Reboot)</h4>
<p>shuts down a server you specify on your local area network. To shut down  your own computer, use</p>
<pre><a href="#shell">Shell</a> shutdown -s -t 00</pre>
<h4><a name="sleep">Sleep</a>(Millisecs)</h4>
<p>pauses the code for the number of milliseconds you specify.</p>
<h4><a name="string">String</a>(Name,Value)</h4>
<p>creates a text variable with the name and value you specify.</p>
<h4><a name="sub">Sub</a>(Pointer)</h4>
<p>declares the beginning of a function. Use <a href="#end">End</a> to declare  the end.</p>
<pre>Sub Main
    msgbox Hello!
End Main, 0</pre>
<p>Unlike Visual Basic, a sub in SoupScript can also return a value. For  example, the sub above returns 0.</p>
<p>Interlocking Subs</p>
<p>In interlocking subs, two subs overlap each other. You'll have to visualize  heavily before using this technique.</p>
<p>The example below returns 1 2 3 4 2 3. (Last output 3: because the code  goes on after it hits end foo.</p>
<pre>sub foo
    msgbox 1
<a href="#call">call</a> bar
    msgbox 4
sub bar
    msgbox 2
end foo
    msgbox 3
end bar</pre>
<h4><a name="uses">Uses</a>(ParamArray constant types)</h4>
<p>loads constants available for certain functions. Choices available are:  ascii, environ, colors, showWindow, msgbox, time, and variables.</p>
<p>Note: the "time" variables are the variables when they are loaded.</p>
<p><a href="soupscript-smp.php#Uses_Example">Example usage</a></p>
<pre>Uses ascii, environ, colors, showWindow, msgbox, mouse, time, variables, VK</pre>
<h4><a name="var">Var</a>(Name,Value,Optional Type)</h4>
<p>creates a variant variable (meaning no explicit type declared) with the  name and value you specify.</p>
<h4><a name="virtualdrive">VirtualDrive</a>(Mount,DriveLetter,VirtualPath)</h4>
<p>creates a virtual drive on your system.</p>
<p>Mount: boolean value on whether the drive is being mounted, or unmounted.</p>
<p>DriveLetter: the destination drive's letter. Note that you can't create  a virtual drive when the drive letter is already in use.</p>
<p>VirtualPath: is where your files actually are. Only local paths, like  C:\WWW\ROOT are supported.</p>
<pre>VirtualDrive 1,R,C:\Documents and Settings</pre>
<h4><a name="waitformouse">WaitForMouse</a>(Optional VK_Key)</h4>
<p>like <a href="#charin">CharIn</a>, <a href="#break">Break</a> and <a href="#breakex">BreakEx</a>, this function asks for user interaction.</p>
<p>The program will pause until the left mouse button is clicked.</p>
<p>To change the setting to wait for some other button, change the VK_Key  parameter to any VK constant.</p>
<p>VK constants require a <a href="#uses">uses</a> declaration.</p>
<h4><a name="windowfrompoint">WindowFromPoint</a>(x,y)</h4>
<p>returns window handle of the window under the screen coordinates you  specify.</p>
<h4><a name="winexec">WinExec</a>(EXEName,Optional WinMode)</h4>
<p>Please look at <a href="#shellexecute">ShellExecute</a>. Starts a program  with a window in its mode.</p>
<p>0: Hidden<br /> 1: Normal<br /> 2: Minimized<br /> 3: Maximized</p>
<h4><a name="writeini">WriteINI</a>(Section,Key,Value,FileName)</h4>
<p>changes a key value in an INI file.</p>
<p>&nbsp;</p>